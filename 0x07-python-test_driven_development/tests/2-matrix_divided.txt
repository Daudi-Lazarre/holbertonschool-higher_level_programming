>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix_divided([],)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[0, 1, 2], [1, 2, 3]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided(None, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([4, [1, 2], [2, 1, 1]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([["hi", 1, 1], [2, 2, "a"], ["b", 35, 36]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[-0.62, -7.88, -1.5], [-0.75, -0.38, -7.0]], 0))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,1,1,1], [1,1,1,1,1], [1,1,1]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[0, 1, 2], [1, 2, 3]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> print(matrix_divided([[1, 2.4, 3], [4.1, 5, 6.8]], "string"))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1], [2], [3]], float('inf'))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
